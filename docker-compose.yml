version: '3.6'

networks:
 gitlab_net:
   driver: bridge
   ipam:
      driver: default
      config:
      - subnet: 192.168.201.0/24

services:
  # Dummy service to run with docker-compose up target in order to start
  # mandatory services for pipeline
  target:
    image: busybox
    depends_on:
    - gitlab
    - gitlab-runner
    command:
    - echo
    - -n
    - ""

  gitlab:
    image: gitlab/gitlab-ce:latest
    hostname: gitlab
    ports:
    - "9080:80"
    - "9443:443"
    - "9022:22"
    volumes:
    - ./persistence/gitlab/config:/etc/gitlab
    - ./persistence/gitlab/logs:/var/log/gitlab
    - ./persistence/gitlab/data:/var/opt/gitlab
    networks:
      gitlab_net:
        ipv4_address: 192.168.201.10

  gitlab-runner:
    image: gitlab/gitlab-runner:alpine
    depends_on:
    - gitlab
    privileged: true
    networks:
    - gitlab_net
    extra_hosts:
      - "gitlab:192.168.201.10"
    volumes:
    - ./persistence/gitlab-runner/config:/etc/gitlab-runner
    - /var/run/docker.sock:/var/run/docker.sock
    environment:
    - CI_SERVER_URL=http://gitlab/ci
    - REGISTRATION_TOKEN=${GITLAB_RUNNER_REGISTRATION_TOKEN}
    - RUNNER_NAME=alpine_docker
    - RUNNER_EXECUTOR=docker
    - RUNNER_TAG_LIST=dind,did,alpine,docker
    - REGISTER_RUN_UNTAGGED=true
    - DOCKER_IMAGE=alpine:latest
    # Notice that it matches exactly the network found in docker network ls
    - DOCKER_NETWORK_MODE=gitlab-ci-docker-compose_gitlab_net
    - DOCKER_EXTRA_HOSTS=gitlab:192.168.201.10
    - DOCKER_VOLUMES=/var/run/docker.sock:/var/run/docker.sock
    - DOCKER_PRIVILEGED=true

  purge-runners:
    image: docker
    privileged: true
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DOCKER_NAME_PATTERN: ^runner.*
    command:
      - /bin/sh
      - -c
      - docker ps -a | fgrep Exited | awk -v pattern="$$DOCKER_NAME_PATTERN" '$$NF~pattern{print $$1}' | tee | xargs docker rm -f
